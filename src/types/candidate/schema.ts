import { z } from 'zod';
import { generateDefaultsFromSchema } from '../../utils/generateDefaults';

const JobHistorySchema = z.object({
    company: z.string().optional(),
    jobtitle: z.string().optional(),
    startdate: z.string().optional(),
    enddate: z.string().optional(),
    description: z.string().optional(),
});

const CustomFieldSchema = z.object({
    id: z.number(),
    value: z.string(),
});

export const candidateDataSchema = z.object({
    firstname: z.string(),
    lastname: z.string(),
    fullname: z.string(),
    jobtitle: z.string().optional(),
    company: z.string().optional(),
    address1: z.string().optional(),
    address2: z.string().optional(),
    city: z.string().optional(),
    state: z.string().optional(),
    zipcode: z.string().optional(),
    country: z.string().optional(),
    workphone: z.string().optional(),
    homephone: z.string().optional(),
    cellphone: z.string().optional(),
    email: z.string().optional(),
    linkedin: z.string().optional(),
    dateofbirth: z.string().optional(),
    nationality: z.string().optional(),
    languages: z.string().optional(),
    education: z.string().optional(),
    source: z.string().optional(),
    jobhistory: z.array(JobHistorySchema).optional(),
    salary: z.number().optional(),
    note: z.string().optional(),
    image: z.string().optional(),
    skills: z.string().optional(),
    status: z.string().optional(),
    customfields: z.array(CustomFieldSchema).optional(),
});

export type CandidateData = z.infer<typeof candidateDataSchema>;
export const candidateDataDefaults = generateDefaultsFromSchema<CandidateData>(candidateDataSchema);

export const candidateUpdateSchema = z.object({
    accountno: z.string().optional(),
    achievements: z.string().optional(),
    address: z.string().optional(),
    addressline1: z.string().optional(),
    addressline2: z.string().optional(),
    agencyaddressline1: z.string().optional(),
    agencyaddressline2: z.string().optional(),
    agencycontactemail: z.string().optional(),
    agencycontactfax: z.string().optional(),
    agencycontactname: z.string().optional(),
    agencycontacttelephone: z.string().optional(),
    agencycountry: z.string().optional(),
    agencycounty: z.string().optional(),
    agencyname: z.string().optional(),
    agencypostcode: z.string().optional(),
    agencyprimary: z.string().optional(),
    agencytown: z.string().optional(),
    agencytype: z.string().optional(),
    assigntoprojects: z.string().optional(),
    associations: z.string().optional(),
    authoriseexpenses: z.string().optional(),
    authorisetimesheets: z.string().optional(),
    availability: z.string().optional(),
    bankname: z.string().optional(),
    bankreference: z.string().optional(),
    billingaccess: z.string().optional(),
    chargerate: z.string().optional(),
    chargeratenum: z.number().optional(),
    costcentrecode: z.string().optional(),
    country: z.string().optional(),
    county: z.string().optional(),
    currentsalary: z.string().optional(),
    currentsalarynum: z.number().optional(),
    currentsituation: z.string().optional(),
    dateapplied: z.string().optional(),
    datecvsent: z.string().optional(),
    datelastcontacted: z.string().optional(),
    dateofbirth: z.string().optional(),
    dateregistered: z.string().optional(),
    department: z.string().optional(),
    desiredsalary: z.string().optional(),
    desiredsalarynum: z.number().optional(),
    disability: z.string().optional(),
    displayas: z.string().optional(),
    educationsummary: z.string().optional(),
    email: z.string().optional(),
    email2: z.string().optional(),
    employmenthistory: z.string().optional(),
    entertimesheets: z.string().optional(),
    ethnicorigin: z.string().optional(),
    firstname: z.string().optional(),
    homephone: z.string().optional(),
    homestation: z.string().optional(),
    interviewdate: z.string().optional(),
    interviewnote: z.string().optional(),
    interviewresult: z.string().optional(),
    jobtitle: z.string().optional(),
    journeytime: z.string().optional(),
    languages: z.string().optional(),
    logonpassword: z.string().optional(),
    logonusername: z.string().optional(),
    marketing: z.string().optional(),
    mobilephone: z.string().optional(),
    myavailability: z.string().optional(),
    nationality: z.string().optional(),
    nissnumber: z.string().optional(),
    note: z.string().optional(),
    noticeperiod: z.string().optional(),
    onlineforms: z.string().optional(),
    otherphone: z.string().optional(),
    owndepartmentonly: z.string().optional(),
    payrate: z.string().optional(),
    payratenum: z.number().optional(),
    payrollnumber: z.string().optional(),
    photo: z.string().optional(),
    postcode: z.string().optional(),
    postcodex: z.string().optional(),
    postcodey: z.string().optional(),
    rating: z.string().optional(),
    salutation: z.string().optional(),
    sortcode: z.string().optional(),
    surname: z.string().optional(),
    tag: z.string().optional(),
    text: z.string().optional(),
    town: z.string().optional(),
    trackerportaluser: z.string().optional(),
    uploadfiles: z.string().optional(),
    wheredidyouhear: z.string().optional(),
    workavailable: z.string().optional(),
    workphone: z.string().optional(),
});

export type CandidateUpdateData = z.infer<typeof candidateUpdateSchema>;